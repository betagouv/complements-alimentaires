# Generated by Django 5.0.4 on 2024-05-09 11:17

import data.fields
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('data', '0062_merge_20240501_1427'),
    ]

    operations = [
        migrations.CreateModel(
            name='CollaborationInvitation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('modification_date', models.DateTimeField(auto_now=True)),
                ('personal_msg', models.TextField(blank=True, verbose_name="message personnel de l'émetteur (optionnel)")),
                ('processed_at', models.DateTimeField(blank=True, null=True, verbose_name='traité à')),
                ('processed_action', models.CharField(blank=True, verbose_name='action de traitement')),
                ('recipient_email', models.EmailField(max_length=254, verbose_name='adresse e-mail du destinataire')),
                ('roles', data.fields.MultipleChoiceField(base_field=models.CharField(choices=[('DeclarantRole', 'Declarantrole'), ('SupervisorRole', 'Supervisorrole')]), default=list, size=None, verbose_name='classes de rôle')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='data.company', verbose_name='entreprise')),
                ('processor', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_processed', to=settings.AUTH_USER_MODEL, verbose_name='traité par')),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_sent', to=settings.AUTH_USER_MODEL, verbose_name='émetteur')),
            ],
            options={
                'verbose_name': 'invitation à devenir collaborateur',
                'verbose_name_plural': 'invitations à devenir collaborateur',
            },
        ),
        migrations.CreateModel(
            name='CoSupervisionClaim',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('modification_date', models.DateTimeField(auto_now=True)),
                ('personal_msg', models.TextField(blank=True, verbose_name="message personnel de l'émetteur (optionnel)")),
                ('processed_at', models.DateTimeField(blank=True, null=True, verbose_name='traité à')),
                ('processed_action', models.CharField(blank=True, verbose_name='action de traitement')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='data.company', verbose_name='entreprise')),
                ('processor', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_processed', to=settings.AUTH_USER_MODEL, verbose_name='traité par')),
                ('recipients', models.ManyToManyField(to=settings.AUTH_USER_MODEL, verbose_name='destinataires')),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_sent', to=settings.AUTH_USER_MODEL, verbose_name='émetteur')),
            ],
            options={
                'verbose_name': 'demande de co-gestion',
                'verbose_name_plural': 'demandes de co-gestion',
            },
        ),
        migrations.CreateModel(
            name='SupervisionClaim',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation_date', models.DateTimeField(auto_now_add=True)),
                ('modification_date', models.DateTimeField(auto_now=True)),
                ('personal_msg', models.TextField(blank=True, verbose_name="message personnel de l'émetteur (optionnel)")),
                ('processed_at', models.DateTimeField(blank=True, null=True, verbose_name='traité à')),
                ('processed_action', models.CharField(blank=True, verbose_name='action de traitement')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='data.company', verbose_name='entreprise')),
                ('processor', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_processed', to=settings.AUTH_USER_MODEL, verbose_name='traité par')),
                ('recipients', models.ManyToManyField(to=settings.AUTH_USER_MODEL, verbose_name='destinataires')),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_sent', to=settings.AUTH_USER_MODEL, verbose_name='émetteur')),
            ],
            options={
                'verbose_name': 'demande de gestion',
                'verbose_name_plural': 'demandes de gestion',
            },
        ),
        migrations.AddConstraint(
            model_name='collaborationinvitation',
            constraint=models.UniqueConstraint(condition=models.Q(('processed_at__isnull', True)), fields=('company', 'recipient_email'), name='unique_collaboration_invitation'),
        ),
    ]
