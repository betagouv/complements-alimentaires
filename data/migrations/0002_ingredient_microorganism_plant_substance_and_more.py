# Generated by Django 4.2.7 on 2023-11-08 22:06

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models


class Migration(migrations.Migration):
    dependencies = [
        ("data", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Ingredient",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("creation_date", models.DateTimeField(auto_now_add=True)),
                ("modification_date", models.DateTimeField(auto_now=True)),
                (
                    "legacy_name",
                    models.TextField(
                        blank=True, null=True, verbose_name="(Legacy) Nom"
                    ),
                ),
                (
                    "legacy_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("additive", "Additif"),
                            ("scent", "Arôme"),
                            ("other", "Autre ingrédient"),
                            ("other_active", "Autre ingrédient actif"),
                            ("nutrient", "Nutriment"),
                        ],
                        max_length=255,
                        null=True,
                        verbose_name="(Legacy) Type",
                    ),
                ),
                (
                    "legacy_synonym",
                    models.TextField(
                        blank=True, null=True, verbose_name="(Legacy) Nom synonyme"
                    ),
                ),
                (
                    "legacy_synonym_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("french", "Nom français"),
                            ("scientific", "Nom scientifique"),
                        ],
                        max_length=255,
                        null=True,
                        verbose_name="(Legacy) Synonym yype",
                    ),
                ),
                (
                    "legacy_substance_name",
                    models.TextField(
                        blank=True,
                        null=True,
                        verbose_name="(Legacy) Nom de la substance",
                    ),
                ),
                (
                    "legacy_substance_unit_name",
                    models.TextField(
                        blank=True,
                        null=True,
                        verbose_name="(Legacy) Nom de la substance avec unité",
                    ),
                ),
                (
                    "legacy_approval_state",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("to_register", "À inscrire"),
                            ("authorized", "Autorisé"),
                            ("rejected", "Non autorisé"),
                            ("unknown", "Sans objet"),
                        ],
                        max_length=255,
                        null=True,
                        verbose_name="(Legacy) Status d'approbation",
                    ),
                ),
                (
                    "legacy_intake_source",
                    models.TextField(
                        blank=True, null=True, verbose_name="(Legacy) Source d'apports"
                    ),
                ),
                (
                    "legacy_minimum_dose",
                    models.DecimalField(
                        blank=True,
                        decimal_places=5,
                        max_digits=10,
                        null=True,
                        verbose_name="(Legacy) Dose minimale",
                    ),
                ),
                (
                    "legacy_maximum_dose",
                    models.DecimalField(
                        blank=True,
                        decimal_places=5,
                        max_digits=10,
                        null=True,
                        verbose_name="(Legacy) Dose maximale",
                    ),
                ),
                (
                    "legacy_public_comments",
                    models.TextField(
                        blank=True,
                        null=True,
                        verbose_name="(Legacy) Commentaires publics",
                    ),
                ),
                (
                    "legacy_private_comments",
                    models.TextField(
                        blank=True,
                        null=True,
                        verbose_name="(Legacy) Commentaires privés",
                    ),
                ),
                (
                    "legacy_observations",
                    models.TextField(
                        blank=True, null=True, verbose_name="(Legacy) Observations"
                    ),
                ),
                (
                    "legacy_description",
                    models.TextField(
                        blank=True, null=True, verbose_name="(Legacy) Description"
                    ),
                ),
            ],
            options={
                "verbose_name": "Autres ingrédients",
            },
        ),
        migrations.CreateModel(
            name="Microorganism",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("creation_date", models.DateTimeField(auto_now_add=True)),
                ("modification_date", models.DateTimeField(auto_now=True)),
                (
                    "legacy_species_name",
                    models.TextField(
                        blank=True, null=True, verbose_name="(Legacy) Nom de l'espèce"
                    ),
                ),
                (
                    "legacy_genre_name",
                    models.TextField(
                        blank=True, null=True, verbose_name="(Legacy) Nom du genre"
                    ),
                ),
                (
                    "legacy_full_name",
                    models.TextField(
                        blank=True, null=True, verbose_name="(Legacy) Nom complet"
                    ),
                ),
                (
                    "legacy_approval_state",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("to_register", "À inscrire"),
                            ("authorized", "Autorisé"),
                            ("rejected", "Non autorisé"),
                            ("unknown", "Sans objet"),
                        ],
                        max_length=255,
                        null=True,
                        verbose_name="(Legacy) Status d'approbation",
                    ),
                ),
                (
                    "legacy_function",
                    models.CharField(
                        blank=True,
                        choices=[("active", "Actif")],
                        max_length=255,
                        null=True,
                        verbose_name="(Legacy) Fonction",
                    ),
                ),
                (
                    "legacy_public_comments",
                    models.TextField(
                        blank=True,
                        null=True,
                        verbose_name="(Legacy) Commentaires publics",
                    ),
                ),
                (
                    "legacy_private_comments",
                    models.TextField(
                        blank=True,
                        null=True,
                        verbose_name="(Legacy) Commentaires privés",
                    ),
                ),
            ],
            options={
                "verbose_name": "micro-organisme",
            },
        ),
        migrations.CreateModel(
            name="Plant",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("creation_date", models.DateTimeField(auto_now_add=True)),
                ("modification_date", models.DateTimeField(auto_now=True)),
                (
                    "legacy_latin_name",
                    models.TextField(
                        blank=True,
                        null=True,
                        verbose_name="(Legacy) Nom de la plante en latin",
                    ),
                ),
                (
                    "legacy_synonym",
                    models.TextField(
                        blank=True, null=True, verbose_name="(Legacy) Nom synonyme"
                    ),
                ),
                (
                    "legacy_useful_part",
                    models.TextField(
                        blank=True, null=True, verbose_name="(Legacy) Partie utile"
                    ),
                ),
                (
                    "legacy_surveillance_part",
                    models.TextField(
                        blank=True,
                        null=True,
                        verbose_name="(Legacy) Partie à surveiller",
                    ),
                ),
                (
                    "legacy_active_substances",
                    models.TextField(
                        blank=True,
                        null=True,
                        verbose_name="(Legacy) Substances actives",
                    ),
                ),
                (
                    "legacy_approval_state",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("to_register", "À inscrire"),
                            ("authorized", "Autorisé"),
                            ("rejected", "Non autorisé"),
                            ("unknown", "Sans objet"),
                        ],
                        max_length=255,
                        null=True,
                        verbose_name="(Legacy) Status d'approbation",
                    ),
                ),
                (
                    "legacy_family",
                    models.TextField(
                        blank=True, null=True, verbose_name="(Legacy) Famille de plante"
                    ),
                ),
                (
                    "legacy_function",
                    models.TextField(
                        blank=True,
                        null=True,
                        verbose_name="(Legacy) Fonction de la plante - ingrédient",
                    ),
                ),
                (
                    "legacy_public_comments",
                    models.TextField(
                        blank=True,
                        null=True,
                        verbose_name="(Legacy) Commentaires publics",
                    ),
                ),
                (
                    "legacy_private_comments",
                    models.TextField(
                        blank=True,
                        null=True,
                        verbose_name="(Legacy) Commentaires privés",
                    ),
                ),
            ],
            options={
                "verbose_name": "plante",
            },
        ),
        migrations.CreateModel(
            name="Substance",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("creation_date", models.DateTimeField(auto_now_add=True)),
                ("modification_date", models.DateTimeField(auto_now=True)),
                (
                    "legacy_sbsact_name",
                    models.TextField(
                        blank=True, null=True, verbose_name="(Legacy) Nom SBSACT"
                    ),
                ),
                (
                    "legacy_synonym",
                    models.TextField(
                        blank=True, null=True, verbose_name="(Legacy) Nom synonyme"
                    ),
                ),
                (
                    "legacy_type",
                    models.TextField(
                        blank=True, null=True, verbose_name="(Legacy) Type"
                    ),
                ),
                (
                    "legacy_approval_state",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("to_register", "À inscrire"),
                            ("authorized", "Autorisé"),
                            ("rejected", "Non autorisé"),
                            ("unknown", "Sans objet"),
                        ],
                        max_length=255,
                        null=True,
                        verbose_name="(Legacy) Status d'approbation",
                    ),
                ),
                (
                    "legacy_public_comments",
                    models.TextField(
                        blank=True,
                        null=True,
                        verbose_name="(Legacy) Commentaires publics",
                    ),
                ),
                (
                    "legacy_private_comments",
                    models.TextField(
                        blank=True,
                        null=True,
                        verbose_name="(Legacy) Commentaires privés",
                    ),
                ),
                (
                    "legacy_source",
                    models.TextField(
                        blank=True, null=True, verbose_name="(Legacy) Substance source"
                    ),
                ),
            ],
            options={
                "verbose_name": "substance active",
            },
        ),
        migrations.CreateModel(
            name="HistoricalSubstance",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("creation_date", models.DateTimeField(blank=True, editable=False)),
                ("modification_date", models.DateTimeField(blank=True, editable=False)),
                (
                    "legacy_sbsact_name",
                    models.TextField(
                        blank=True, null=True, verbose_name="(Legacy) Nom SBSACT"
                    ),
                ),
                (
                    "legacy_synonym",
                    models.TextField(
                        blank=True, null=True, verbose_name="(Legacy) Nom synonyme"
                    ),
                ),
                (
                    "legacy_type",
                    models.TextField(
                        blank=True, null=True, verbose_name="(Legacy) Type"
                    ),
                ),
                (
                    "legacy_approval_state",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("to_register", "À inscrire"),
                            ("authorized", "Autorisé"),
                            ("rejected", "Non autorisé"),
                            ("unknown", "Sans objet"),
                        ],
                        max_length=255,
                        null=True,
                        verbose_name="(Legacy) Status d'approbation",
                    ),
                ),
                (
                    "legacy_public_comments",
                    models.TextField(
                        blank=True,
                        null=True,
                        verbose_name="(Legacy) Commentaires publics",
                    ),
                ),
                (
                    "legacy_private_comments",
                    models.TextField(
                        blank=True,
                        null=True,
                        verbose_name="(Legacy) Commentaires privés",
                    ),
                ),
                (
                    "legacy_source",
                    models.TextField(
                        blank=True, null=True, verbose_name="(Legacy) Substance source"
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical substance active",
                "verbose_name_plural": "historical substance actives",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalPlant",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("creation_date", models.DateTimeField(blank=True, editable=False)),
                ("modification_date", models.DateTimeField(blank=True, editable=False)),
                (
                    "legacy_latin_name",
                    models.TextField(
                        blank=True,
                        null=True,
                        verbose_name="(Legacy) Nom de la plante en latin",
                    ),
                ),
                (
                    "legacy_synonym",
                    models.TextField(
                        blank=True, null=True, verbose_name="(Legacy) Nom synonyme"
                    ),
                ),
                (
                    "legacy_useful_part",
                    models.TextField(
                        blank=True, null=True, verbose_name="(Legacy) Partie utile"
                    ),
                ),
                (
                    "legacy_surveillance_part",
                    models.TextField(
                        blank=True,
                        null=True,
                        verbose_name="(Legacy) Partie à surveiller",
                    ),
                ),
                (
                    "legacy_active_substances",
                    models.TextField(
                        blank=True,
                        null=True,
                        verbose_name="(Legacy) Substances actives",
                    ),
                ),
                (
                    "legacy_approval_state",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("to_register", "À inscrire"),
                            ("authorized", "Autorisé"),
                            ("rejected", "Non autorisé"),
                            ("unknown", "Sans objet"),
                        ],
                        max_length=255,
                        null=True,
                        verbose_name="(Legacy) Status d'approbation",
                    ),
                ),
                (
                    "legacy_family",
                    models.TextField(
                        blank=True, null=True, verbose_name="(Legacy) Famille de plante"
                    ),
                ),
                (
                    "legacy_function",
                    models.TextField(
                        blank=True,
                        null=True,
                        verbose_name="(Legacy) Fonction de la plante - ingrédient",
                    ),
                ),
                (
                    "legacy_public_comments",
                    models.TextField(
                        blank=True,
                        null=True,
                        verbose_name="(Legacy) Commentaires publics",
                    ),
                ),
                (
                    "legacy_private_comments",
                    models.TextField(
                        blank=True,
                        null=True,
                        verbose_name="(Legacy) Commentaires privés",
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical plante",
                "verbose_name_plural": "historical plantes",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalMicroorganism",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("creation_date", models.DateTimeField(blank=True, editable=False)),
                ("modification_date", models.DateTimeField(blank=True, editable=False)),
                (
                    "legacy_species_name",
                    models.TextField(
                        blank=True, null=True, verbose_name="(Legacy) Nom de l'espèce"
                    ),
                ),
                (
                    "legacy_genre_name",
                    models.TextField(
                        blank=True, null=True, verbose_name="(Legacy) Nom du genre"
                    ),
                ),
                (
                    "legacy_full_name",
                    models.TextField(
                        blank=True, null=True, verbose_name="(Legacy) Nom complet"
                    ),
                ),
                (
                    "legacy_approval_state",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("to_register", "À inscrire"),
                            ("authorized", "Autorisé"),
                            ("rejected", "Non autorisé"),
                            ("unknown", "Sans objet"),
                        ],
                        max_length=255,
                        null=True,
                        verbose_name="(Legacy) Status d'approbation",
                    ),
                ),
                (
                    "legacy_function",
                    models.CharField(
                        blank=True,
                        choices=[("active", "Actif")],
                        max_length=255,
                        null=True,
                        verbose_name="(Legacy) Fonction",
                    ),
                ),
                (
                    "legacy_public_comments",
                    models.TextField(
                        blank=True,
                        null=True,
                        verbose_name="(Legacy) Commentaires publics",
                    ),
                ),
                (
                    "legacy_private_comments",
                    models.TextField(
                        blank=True,
                        null=True,
                        verbose_name="(Legacy) Commentaires privés",
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical micro-organisme",
                "verbose_name_plural": "historical micro-organismes",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalIngredient",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("creation_date", models.DateTimeField(blank=True, editable=False)),
                ("modification_date", models.DateTimeField(blank=True, editable=False)),
                (
                    "legacy_name",
                    models.TextField(
                        blank=True, null=True, verbose_name="(Legacy) Nom"
                    ),
                ),
                (
                    "legacy_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("additive", "Additif"),
                            ("scent", "Arôme"),
                            ("other", "Autre ingrédient"),
                            ("other_active", "Autre ingrédient actif"),
                            ("nutrient", "Nutriment"),
                        ],
                        max_length=255,
                        null=True,
                        verbose_name="(Legacy) Type",
                    ),
                ),
                (
                    "legacy_synonym",
                    models.TextField(
                        blank=True, null=True, verbose_name="(Legacy) Nom synonyme"
                    ),
                ),
                (
                    "legacy_synonym_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("french", "Nom français"),
                            ("scientific", "Nom scientifique"),
                        ],
                        max_length=255,
                        null=True,
                        verbose_name="(Legacy) Synonym yype",
                    ),
                ),
                (
                    "legacy_substance_name",
                    models.TextField(
                        blank=True,
                        null=True,
                        verbose_name="(Legacy) Nom de la substance",
                    ),
                ),
                (
                    "legacy_substance_unit_name",
                    models.TextField(
                        blank=True,
                        null=True,
                        verbose_name="(Legacy) Nom de la substance avec unité",
                    ),
                ),
                (
                    "legacy_approval_state",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("to_register", "À inscrire"),
                            ("authorized", "Autorisé"),
                            ("rejected", "Non autorisé"),
                            ("unknown", "Sans objet"),
                        ],
                        max_length=255,
                        null=True,
                        verbose_name="(Legacy) Status d'approbation",
                    ),
                ),
                (
                    "legacy_intake_source",
                    models.TextField(
                        blank=True, null=True, verbose_name="(Legacy) Source d'apports"
                    ),
                ),
                (
                    "legacy_minimum_dose",
                    models.DecimalField(
                        blank=True,
                        decimal_places=5,
                        max_digits=10,
                        null=True,
                        verbose_name="(Legacy) Dose minimale",
                    ),
                ),
                (
                    "legacy_maximum_dose",
                    models.DecimalField(
                        blank=True,
                        decimal_places=5,
                        max_digits=10,
                        null=True,
                        verbose_name="(Legacy) Dose maximale",
                    ),
                ),
                (
                    "legacy_public_comments",
                    models.TextField(
                        blank=True,
                        null=True,
                        verbose_name="(Legacy) Commentaires publics",
                    ),
                ),
                (
                    "legacy_private_comments",
                    models.TextField(
                        blank=True,
                        null=True,
                        verbose_name="(Legacy) Commentaires privés",
                    ),
                ),
                (
                    "legacy_observations",
                    models.TextField(
                        blank=True, null=True, verbose_name="(Legacy) Observations"
                    ),
                ),
                (
                    "legacy_description",
                    models.TextField(
                        blank=True, null=True, verbose_name="(Legacy) Description"
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Autres ingrédients",
                "verbose_name_plural": "historical Autres ingrédientss",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
