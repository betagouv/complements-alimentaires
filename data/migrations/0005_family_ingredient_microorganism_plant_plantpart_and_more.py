# Generated by Django 4.2.7 on 2023-12-11 08:34

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    dependencies = [
        ("data", "0004_condition_population_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="Family",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("creation_date", models.DateTimeField(auto_now_add=True)),
                ("modification_date", models.DateTimeField(auto_now=True)),
                ("name", models.TextField(verbose_name="nom")),
                (
                    "name_en",
                    models.TextField(blank=True, verbose_name="nom en anglais"),
                ),
            ],
            options={
                "verbose_name": "famille de plantes",
            },
        ),
        migrations.CreateModel(
            name="Ingredient",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("creation_date", models.DateTimeField(auto_now_add=True)),
                ("modification_date", models.DateTimeField(auto_now=True)),
                ("name", models.TextField(verbose_name="nom")),
                (
                    "name_en",
                    models.TextField(blank=True, verbose_name="nom en anglais"),
                ),
                (
                    "public_comments",
                    models.TextField(blank=True, verbose_name="commentaires publics"),
                ),
                (
                    "private_comments",
                    models.TextField(blank=True, verbose_name="commentaires privés"),
                ),
                (
                    "is_obsolete",
                    models.BooleanField(
                        default=False, verbose_name="ingrédient obsolète"
                    ),
                ),
                ("observation", models.TextField(blank=True)),
                ("description", models.TextField(blank=True)),
            ],
            options={
                "verbose_name": "autre ingrédient",
                "verbose_name_plural": "autres ingrédients",
            },
        ),
        migrations.CreateModel(
            name="Microorganism",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("creation_date", models.DateTimeField(auto_now_add=True)),
                ("modification_date", models.DateTimeField(auto_now=True)),
                ("name", models.TextField(verbose_name="nom")),
                (
                    "name_en",
                    models.TextField(blank=True, verbose_name="nom en anglais"),
                ),
                (
                    "public_comments",
                    models.TextField(blank=True, verbose_name="commentaires publics"),
                ),
                (
                    "private_comments",
                    models.TextField(blank=True, verbose_name="commentaires privés"),
                ),
                (
                    "is_obsolete",
                    models.BooleanField(
                        default=False, verbose_name="ingrédient obsolète"
                    ),
                ),
                ("genre", models.TextField(verbose_name="genre de micro-organisme")),
            ],
            options={
                "verbose_name": "micro-organisme",
            },
        ),
        migrations.CreateModel(
            name="Plant",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("creation_date", models.DateTimeField(auto_now_add=True)),
                ("modification_date", models.DateTimeField(auto_now=True)),
                ("name", models.TextField(verbose_name="nom")),
                (
                    "name_en",
                    models.TextField(blank=True, verbose_name="nom en anglais"),
                ),
                (
                    "public_comments",
                    models.TextField(blank=True, verbose_name="commentaires publics"),
                ),
                (
                    "private_comments",
                    models.TextField(blank=True, verbose_name="commentaires privés"),
                ),
                (
                    "is_obsolete",
                    models.BooleanField(
                        default=False, verbose_name="ingrédient obsolète"
                    ),
                ),
                (
                    "family",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="data.family",
                        verbose_name="famille de plante",
                    ),
                ),
            ],
            options={
                "verbose_name": "plante",
            },
        ),
        migrations.CreateModel(
            name="PlantPart",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("creation_date", models.DateTimeField(auto_now_add=True)),
                ("modification_date", models.DateTimeField(auto_now=True)),
                ("name", models.TextField(verbose_name="nom")),
                (
                    "name_en",
                    models.TextField(blank=True, verbose_name="nom en anglais"),
                ),
            ],
            options={
                "verbose_name": "partie de plante",
            },
        ),
        migrations.CreateModel(
            name="Substance",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("creation_date", models.DateTimeField(auto_now_add=True)),
                ("modification_date", models.DateTimeField(auto_now=True)),
                ("name", models.TextField(verbose_name="nom")),
                (
                    "name_en",
                    models.TextField(blank=True, verbose_name="nom en anglais"),
                ),
                (
                    "public_comments",
                    models.TextField(blank=True, verbose_name="commentaires publics"),
                ),
                (
                    "private_comments",
                    models.TextField(blank=True, verbose_name="commentaires privés"),
                ),
                (
                    "is_obsolete",
                    models.BooleanField(
                        default=False, verbose_name="ingrédient obsolète"
                    ),
                ),
                (
                    "cas_number",
                    models.CharField(
                        blank=True, max_length=10, verbose_name="numéro CAS"
                    ),
                ),
                (
                    "einec_number",
                    models.CharField(
                        blank=True, max_length=7, verbose_name="numéro EINECS"
                    ),
                ),
                ("source", models.TextField(blank=True)),
                ("must_specify_quantity", models.BooleanField()),
                (
                    "min_quantity",
                    models.FloatField(
                        blank=True, verbose_name="quantité minimale autorisée"
                    ),
                ),
                (
                    "max_quantity",
                    models.FloatField(
                        blank=True, verbose_name="quantité maximale autorisée"
                    ),
                ),
                (
                    "nutritional_reference",
                    models.FloatField(
                        blank=True, verbose_name="apport nutritionnel conseillé"
                    ),
                ),
            ],
            options={
                "verbose_name": "substance active",
                "verbose_name_plural": "substances actives",
            },
        ),
        migrations.CreateModel(
            name="SubstanceSynonym",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("creation_date", models.DateTimeField(auto_now_add=True)),
                ("modification_date", models.DateTimeField(auto_now=True)),
                ("name", models.TextField()),
                (
                    "substance",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE, to="data.substance"
                    ),
                ),
            ],
            options={
                "verbose_name": "synonyme substance active",
            },
        ),
        migrations.CreateModel(
            name="PlantSynonym",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("creation_date", models.DateTimeField(auto_now_add=True)),
                ("modification_date", models.DateTimeField(auto_now=True)),
                ("name", models.TextField(verbose_name="nom synonyme")),
                (
                    "plant",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="data.plant",
                        verbose_name="nom de référence",
                    ),
                ),
            ],
            options={
                "verbose_name": "synonyme de plante",
            },
        ),
        migrations.AddField(
            model_name="plant",
            name="substance",
            field=models.ManyToManyField(to="data.substance"),
        ),
        migrations.AddField(
            model_name="plant",
            name="useful_parts",
            field=models.ManyToManyField(to="data.plantpart"),
        ),
        migrations.CreateModel(
            name="MicroorganismSynonym",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("creation_date", models.DateTimeField(auto_now_add=True)),
                ("modification_date", models.DateTimeField(auto_now=True)),
                ("name", models.TextField(verbose_name="nom")),
                (
                    "microorganism",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="data.microorganism",
                    ),
                ),
            ],
            options={
                "verbose_name": "synonyme de micro-organisme",
            },
        ),
        migrations.AddField(
            model_name="microorganism",
            name="substance",
            field=models.ManyToManyField(to="data.substance"),
        ),
        migrations.CreateModel(
            name="IngredientSynonym",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("creation_date", models.DateTimeField(auto_now_add=True)),
                ("modification_date", models.DateTimeField(auto_now=True)),
                ("name", models.TextField(verbose_name="nom")),
                (
                    "ingredient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="data.ingredient",
                    ),
                ),
            ],
            options={
                "verbose_name": "synonyme d'ingrédient",
            },
        ),
        migrations.AddField(
            model_name="ingredient",
            name="substance",
            field=models.ManyToManyField(to="data.substance"),
        ),
    ]
