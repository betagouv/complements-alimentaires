# Generated by Django 5.1.5 on 2025-03-03 13:11
# Modifiée manuellement pour :
# * remplir les champ *_max_quantity de la table HistoricalMaxQuantityPerPopulationRelation

import django.db.models.deletion
import django.db.models.functions.comparison
import simple_history.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('data', '0123_company_old_siret_company_old_vat'),
    ]

    def set_max_quantities(apps, schema_editor):
        """Set quantities for general population"""
        Substance = apps.get_model("data", "Substance")
        Population = apps.get_model("data", "Population")
        MaxQuantityPerPopulationRelation = apps.get_model("data", "MaxQuantityPerPopulationRelation")
        general_population = Population.objects.get(name="Population générale")
        for substance in Substance.objects.all().iterator():
            if substance.max_quantity:
                max_quantities_for_general_population = MaxQuantityPerPopulationRelation(
                    population=general_population,
                    substance=substance,
                    siccrf_max_quantity=substance.siccrf_max_quantity,
                    ca_max_quantity=substance.ca_max_quantity,
                )
                max_quantities_for_general_population.save()

    def reverse_set_max_quantities(apps, schema_editor):
        pass

    operations = [
        migrations.CreateModel(
            name='HistoricalMaxQuantityPerPopulationRelation',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('siccrf_max_quantity', models.FloatField(blank=True, null=True, verbose_name='quantité maximale autorisée pour la population cible (selon la base SICCRF)')),
                ('ca_max_quantity', models.FloatField(blank=True, null=True, verbose_name='quantité maximale autorisée pour la population cible')),
                ('max_quantity', models.GeneratedField(db_persist=True, expression=django.db.models.functions.comparison.Coalesce(models.F('ca_max_quantity'), models.F('siccrf_max_quantity')), output_field=models.FloatField(blank=True, null=True, verbose_name='quantité maximale autorisée'))),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('population', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='data.population')),
                ('substance', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='data.substance')),
            ],
            options={
                'verbose_name': 'historical max quantity per population relation',
                'verbose_name_plural': 'historical max quantity per population relations',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='MaxQuantityPerPopulationRelation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('siccrf_max_quantity', models.FloatField(blank=True, null=True, verbose_name='quantité maximale autorisée pour la population cible (selon la base SICCRF)')),
                ('ca_max_quantity', models.FloatField(blank=True, null=True, verbose_name='quantité maximale autorisée pour la population cible')),
                ('max_quantity', models.GeneratedField(db_persist=True, expression=django.db.models.functions.comparison.Coalesce(models.F('ca_max_quantity'), models.F('siccrf_max_quantity')), output_field=models.FloatField(blank=True, null=True, verbose_name='quantité maximale autorisée'))),
                ('population', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='data.population')),
                ('substance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='data.substance')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='substance',
            name='max_quantities',
            field=models.ManyToManyField(through='data.MaxQuantityPerPopulationRelation', to='data.population'),
        ),
        migrations.RunPython(set_max_quantities, reverse_set_max_quantities),

    ]
