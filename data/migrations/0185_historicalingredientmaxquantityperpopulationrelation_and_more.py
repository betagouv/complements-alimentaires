# Generated by Django 5.1.7 on 2025-10-03 13:27

import django.db.models.deletion
import simple_history.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('data', '0184_ingredientsynonym_unicity_ingredient_synonym_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='HistoricalIngredientMaxQuantityPerPopulationRelation',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('max_quantity', models.FloatField(blank=True, null=True, verbose_name='quantité maximale autorisée pour la population cible')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical quantité maximum de ingredient autorisée pour une population cible',
                'verbose_name_plural': 'historical quantité maximum de ingredient autorisée pour une population cibles',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalMicroorganismMaxQuantityPerPopulationRelation',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('max_quantity', models.FloatField(blank=True, null=True, verbose_name='quantité maximale autorisée pour la population cible')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical quantité maximum de microorganism autorisée pour une population cible',
                'verbose_name_plural': 'historical quantité maximum de microorganism autorisée pour une population cibles',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalPlantMaxQuantityPerPopulationRelation',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('max_quantity', models.FloatField(blank=True, null=True, verbose_name='quantité maximale autorisée pour la population cible')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
            ],
            options={
                'verbose_name': 'historical quantité maximum de plant autorisée pour une population cible',
                'verbose_name_plural': 'historical quantité maximum de plant autorisée pour une population cibles',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='IngredientMaxQuantityPerPopulationRelation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('max_quantity', models.FloatField(blank=True, null=True, verbose_name='quantité maximale autorisée pour la population cible')),
            ],
            options={
                'verbose_name': 'quantité maximum de ingredient autorisée pour une population cible',
            },
        ),
        migrations.CreateModel(
            name='MicroorganismMaxQuantityPerPopulationRelation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('max_quantity', models.FloatField(blank=True, null=True, verbose_name='quantité maximale autorisée pour la population cible')),
            ],
            options={
                'verbose_name': 'quantité maximum de microorganism autorisée pour une population cible',
            },
        ),
        migrations.CreateModel(
            name='PlantMaxQuantityPerPopulationRelation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('max_quantity', models.FloatField(blank=True, null=True, verbose_name='quantité maximale autorisée pour la population cible')),
            ],
            options={
                'verbose_name': 'quantité maximum de plant autorisée pour une population cible',
            },
        ),
        migrations.RenameModel(
            old_name='HistoricalMaxQuantityPerPopulationRelation',
            new_name='HistoricalSubstanceMaxQuantityPerPopulationRelation',
        ),
        migrations.RenameModel(
            old_name='MaxQuantityPerPopulationRelation',
            new_name='SubstanceMaxQuantityPerPopulationRelation',
        ),
        migrations.RemoveConstraint(
            model_name='substancemaxquantityperpopulationrelation',
            name='unique_max_quantity_per_population',
        ),
        migrations.AddField(
            model_name='historicalingredient',
            name='unit',
            field=models.ForeignKey(blank=True, db_constraint=False, default=None, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='data.substanceunit', verbose_name='unité des quantités spécifiées (quantité max, apport de référence)'),
        ),
        migrations.AddField(
            model_name='historicalmicroorganism',
            name='unit',
            field=models.ForeignKey(blank=True, db_constraint=False, default=None, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='data.substanceunit', verbose_name='unité des quantités spécifiées (quantité max, apport de référence)'),
        ),
        migrations.AddField(
            model_name='historicalplant',
            name='unit',
            field=models.ForeignKey(blank=True, db_constraint=False, default=None, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='data.substanceunit', verbose_name='unité des quantités spécifiées (quantité max, apport de référence)'),
        ),
        migrations.AddField(
            model_name='ingredient',
            name='unit',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='data.substanceunit', verbose_name='unité des quantités spécifiées (quantité max, apport de référence)'),
        ),
        migrations.AddField(
            model_name='microorganism',
            name='unit',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='data.substanceunit', verbose_name='unité des quantités spécifiées (quantité max, apport de référence)'),
        ),
        migrations.AddField(
            model_name='plant',
            name='unit',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='data.substanceunit', verbose_name='unité des quantités spécifiées (quantité max, apport de référence)'),
        ),
        migrations.AddConstraint(
            model_name='substancemaxquantityperpopulationrelation',
            constraint=models.UniqueConstraint(fields=('substance', 'population'), name='unique_substance_max_quantity_per_population'),
        ),
        migrations.AddField(
            model_name='historicalingredientmaxquantityperpopulationrelation',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalingredientmaxquantityperpopulationrelation',
            name='ingredient',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='data.ingredient'),
        ),
        migrations.AddField(
            model_name='historicalingredientmaxquantityperpopulationrelation',
            name='population',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='data.population'),
        ),
        migrations.AddField(
            model_name='historicalmicroorganismmaxquantityperpopulationrelation',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalmicroorganismmaxquantityperpopulationrelation',
            name='microorganism',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='data.microorganism'),
        ),
        migrations.AddField(
            model_name='historicalmicroorganismmaxquantityperpopulationrelation',
            name='population',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='data.population'),
        ),
        migrations.AddField(
            model_name='historicalplantmaxquantityperpopulationrelation',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalplantmaxquantityperpopulationrelation',
            name='plant',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='data.plant'),
        ),
        migrations.AddField(
            model_name='historicalplantmaxquantityperpopulationrelation',
            name='population',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='data.population'),
        ),
        migrations.AddField(
            model_name='ingredientmaxquantityperpopulationrelation',
            name='ingredient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='data.ingredient'),
        ),
        migrations.AddField(
            model_name='ingredientmaxquantityperpopulationrelation',
            name='population',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='data.population'),
        ),
        migrations.AddField(
            model_name='ingredient',
            name='max_quantities',
            field=models.ManyToManyField(through='data.IngredientMaxQuantityPerPopulationRelation', to='data.population'),
        ),
        migrations.AddField(
            model_name='microorganismmaxquantityperpopulationrelation',
            name='microorganism',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='data.microorganism'),
        ),
        migrations.AddField(
            model_name='microorganismmaxquantityperpopulationrelation',
            name='population',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='data.population'),
        ),
        migrations.AddField(
            model_name='microorganism',
            name='max_quantities',
            field=models.ManyToManyField(through='data.MicroorganismMaxQuantityPerPopulationRelation', to='data.population'),
        ),
        migrations.AddField(
            model_name='plantmaxquantityperpopulationrelation',
            name='plant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='data.plant'),
        ),
        migrations.AddField(
            model_name='plantmaxquantityperpopulationrelation',
            name='population',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='data.population'),
        ),
        migrations.AddField(
            model_name='plant',
            name='max_quantities',
            field=models.ManyToManyField(through='data.PlantMaxQuantityPerPopulationRelation', to='data.population'),
        ),
        migrations.AddConstraint(
            model_name='ingredientmaxquantityperpopulationrelation',
            constraint=models.UniqueConstraint(fields=('ingredient', 'population'), name='unique_ingredient_max_quantity_per_population'),
        ),
        migrations.AddConstraint(
            model_name='microorganismmaxquantityperpopulationrelation',
            constraint=models.UniqueConstraint(fields=('microorganism', 'population'), name='unique_microorganism_max_quantity_per_population'),
        ),
        migrations.AddConstraint(
            model_name='plantmaxquantityperpopulationrelation',
            constraint=models.UniqueConstraint(fields=('plant', 'population'), name='unique_plant_max_quantity_per_population'),
        ),
    ]
