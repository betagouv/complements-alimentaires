# Generated by Django 5.1.7 on 2025-06-02 09:40

import data.fields
import data.validators
import django.db.models.deletion
import phonenumber_field.modelfields
import simple_history.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('data', '0150_alter_historicalingredient_to_be_entered_in_next_decree_and_more'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='etablissementtocompanyrelation',
            options={'verbose_name': "Relation Entreprises Compl'Alim <-> Entreprises Teleicare", 'verbose_name_plural': "Relation Entreprises Compl'Alim <-> Entreprises Teleicare"},
        ),
        migrations.CreateModel(
            name='HistoricalCompany',
            fields=[
                ('id', models.BigIntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('creation_date', models.DateTimeField(blank=True, editable=False)),
                ('modification_date', models.DateTimeField(blank=True, editable=False)),
                ('address', models.CharField(help_text='numéro et voie', verbose_name='adresse')),
                ('additional_details', models.CharField(blank=True, help_text='bâtiment, immeuble, escalier et numéro d’appartement', verbose_name='complément d’adresse')),
                ('postal_code', models.CharField(max_length=10, verbose_name='code postal')),
                ('city', models.CharField(verbose_name='ville ou commune')),
                ('cedex', models.CharField(blank=True, verbose_name='CEDEX')),
                ('country', models.CharField(choices=[('FR', 'France'), ('DE', 'Allemagne'), ('AT', 'Autriche'), ('BE', 'Belgique'), ('BG', 'Bulgarie'), ('CY', 'Chypre'), ('HR', 'Croatie'), ('DK', 'Danemark'), ('ES', 'Espagne'), ('EE', 'Estonie'), ('FI', 'Finlande'), ('GR', 'Grèce'), ('HU', 'Hongrie'), ('IE', 'Irlande'), ('NI', 'Irlande du Nord'), ('IS', 'Islande'), ('IT', 'Italie'), ('LV', 'Lettonie'), ('LI', 'Liechtenstein'), ('LT', 'Lituanie'), ('LU', 'Luxembourg'), ('MT', 'Malte'), ('NO', 'Norvège'), ('NL', 'Pays-Bas'), ('PL', 'Pologne'), ('PT', 'Portugal'), ('RO', 'Roumanie'), ('SK', 'Slovaquie'), ('SI', 'Slovénie'), ('SE', 'Suède'), ('CZ', 'République Tchèque')], default='FR', max_length=50, verbose_name='pays')),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, region=None, verbose_name='numéro de téléphone de contact')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='adresse e-mail de contact')),
                ('website', models.CharField(blank=True, verbose_name="site web de l'entreprise")),
                ('social_name', models.CharField(verbose_name='dénomination sociale')),
                ('commercial_name', models.CharField(blank=True, help_text='nom commercial', verbose_name='enseigne')),
                ('siret', models.CharField(blank=True, db_index=True, help_text='14 chiffres', null=True, validators=[data.validators.validate_siret], verbose_name='n° SIRET')),
                ('vat', models.CharField(blank=True, db_index=True, null=True, validators=[data.validators.validate_vat], verbose_name='n° TVA intracommunautaire')),
                ('activities', data.fields.MultipleChoiceField(base_field=models.CharField(choices=[('FABRICANT', 'Fabricant'), ('FAÇONNIER', 'Façonnier'), ('IMPORTATEUR', 'Importateur'), ('INTRODUCTEUR', 'Introducteur'), ('CONSEIL', 'Conseil'), ('DISTRIBUTEUR', 'Distributeur')]), blank=True, default=list, size=None, verbose_name='activités')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField(db_index=True)),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical entreprise',
                'verbose_name_plural': 'historical entreprises',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': ('history_date', 'history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
