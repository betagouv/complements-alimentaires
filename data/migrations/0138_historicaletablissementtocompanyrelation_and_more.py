# Generated by Django 5.1.7 on 2025-04-18 14:31

import data.validators
import django.db.models.deletion
import simple_history.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('data', '0137_alter_substance_substance_types'),
    ]

    def fill_etablissement_to_company_relation(apps, schema_editor):
        Company = apps.get_model("data", "Company")
        EtablissementToCompanyRelation = apps.get_model("data", "EtablissementToCompanyRelation")
        for company in Company.objects.exclude(siccrf_id=None):
            relation = EtablissementToCompanyRelation(
                company=company, siccrf_id=company.siccrf_id, old_vat=company.old_vat, old_siret=company.old_siret
            )
            relation.save()

    def reverse_fill_etablissement_to_company_relation(apps, schema_editor):
        pass

    operations = [
        migrations.CreateModel(
            name='EtablissementToCompanyRelation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('siccrf_id', models.IntegerField(blank=True, db_index=True, editable=False, null=True, unique=True, verbose_name='etab_ident dans le modèle IcaEtablissement SICCRF')),
                ('old_siret', models.CharField(blank=True, help_text='14 chiffres', null=True, unique=True, validators=[data.validators.validate_siret], verbose_name='n° SIRET dans TeleIcare, si différent')),
                ('old_vat', models.CharField(blank=True, null=True, unique=True, validators=[data.validators.validate_vat], verbose_name='n° TVA intracommunautaire dans TeleIcare, si différent')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='data.company')),
            ],
            options={
                'verbose_name': "Anciens n° SIRET et n° TVA intracommunautaire, relation avec table d'entreprises TeleIcare et les entreprises Compl'Alim",
                'constraints': [models.UniqueConstraint(fields=('company', 'siccrf_id'), name='unique_link')],
            },
        ),
        migrations.RunPython(fill_etablissement_to_company_relation, reverse_fill_etablissement_to_company_relation),

    ]
