# Generated by Django 4.2.7 on 2023-12-19 23:55

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models


class Migration(migrations.Migration):
    replaces = [
        ("data", "0007_auto_20231220_0031"),
        ("data", "0008_alter_plantfamily_options_and_more"),
    ]

    dependencies = [
        ("data", "0006_rename_substance_ingredient_substances_and_more"),
    ]

    operations = [
        migrations.RenameModel(
            old_name="Family",
            new_name="PlantFamily",
        ),
        migrations.AlterModelOptions(
            name="plantfamily",
            options={
                "verbose_name": "famille de plantes",
                "verbose_name_plural": "familles de plantes",
            },
        ),
        migrations.RenameField(
            model_name="ingredientsynonym",
            old_name="ingredient",
            new_name="standard_name",
        ),
        migrations.RenameField(
            model_name="microorganismsynonym",
            old_name="microorganism",
            new_name="standard_name",
        ),
        migrations.RenameField(
            model_name="plantsynonym",
            old_name="plant",
            new_name="standard_name",
        ),
        migrations.RemoveField(
            model_name="plant",
            name="name_en",
        ),
        migrations.AddField(
            model_name="condition",
            name="is_obsolete",
            field=models.BooleanField(default=False, verbose_name="objet obsolète"),
        ),
        migrations.AddField(
            model_name="ingredientsynonym",
            name="is_obsolete",
            field=models.BooleanField(default=False, verbose_name="objet obsolète"),
        ),
        migrations.AddField(
            model_name="microorganismsynonym",
            name="is_obsolete",
            field=models.BooleanField(default=False, verbose_name="objet obsolète"),
        ),
        migrations.AddField(
            model_name="plantfamily",
            name="is_obsolete",
            field=models.BooleanField(default=False, verbose_name="objet obsolète"),
        ),
        migrations.AddField(
            model_name="plantpart",
            name="is_obsolete",
            field=models.BooleanField(default=False, verbose_name="objet obsolète"),
        ),
        migrations.AddField(
            model_name="plantsynonym",
            name="is_obsolete",
            field=models.BooleanField(default=False, verbose_name="objet obsolète"),
        ),
        migrations.AddField(
            model_name="population",
            name="is_obsolete",
            field=models.BooleanField(default=False, verbose_name="objet obsolète"),
        ),
        migrations.AddField(
            model_name="substancesynonym",
            name="is_obsolete",
            field=models.BooleanField(default=False, verbose_name="objet obsolète"),
        ),
        migrations.AlterField(
            model_name="condition",
            name="name",
            field=models.TextField(verbose_name="nom"),
        ),
        migrations.AlterField(
            model_name="ingredient",
            name="is_obsolete",
            field=models.BooleanField(default=False, verbose_name="objet obsolète"),
        ),
        migrations.AlterField(
            model_name="microorganism",
            name="is_obsolete",
            field=models.BooleanField(default=False, verbose_name="objet obsolète"),
        ),
        migrations.AlterField(
            model_name="plant",
            name="family",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="data.plantfamily",
                verbose_name="famille de plante",
            ),
        ),
        migrations.AlterField(
            model_name="plant",
            name="is_obsolete",
            field=models.BooleanField(default=False, verbose_name="objet obsolète"),
        ),
        migrations.AlterField(
            model_name="plantsynonym",
            name="name",
            field=models.TextField(verbose_name="nom"),
        ),
        migrations.AlterField(
            model_name="population",
            name="name",
            field=models.TextField(verbose_name="nom"),
        ),
        migrations.AlterField(
            model_name="substance",
            name="is_obsolete",
            field=models.BooleanField(default=False, verbose_name="objet obsolète"),
        ),
        migrations.AlterField(
            model_name="substancesynonym",
            name="name",
            field=models.TextField(verbose_name="nom"),
        ),
        migrations.CreateModel(
            name="HistoricalSubstanceSynonym",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("creation_date", models.DateTimeField(blank=True, editable=False)),
                ("modification_date", models.DateTimeField(blank=True, editable=False)),
                ("name", models.TextField(verbose_name="nom")),
                (
                    "is_obsolete",
                    models.BooleanField(default=False, verbose_name="objet obsolète"),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "substance",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="data.substance",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical synonyme substance active",
                "verbose_name_plural": "historical synonyme substance actives",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalSubstance",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("creation_date", models.DateTimeField(blank=True, editable=False)),
                ("modification_date", models.DateTimeField(blank=True, editable=False)),
                ("name", models.TextField(verbose_name="nom")),
                (
                    "is_obsolete",
                    models.BooleanField(default=False, verbose_name="objet obsolète"),
                ),
                (
                    "public_comments",
                    models.TextField(blank=True, verbose_name="commentaires publics"),
                ),
                (
                    "private_comments",
                    models.TextField(blank=True, verbose_name="commentaires privés"),
                ),
                (
                    "name_en",
                    models.TextField(blank=True, verbose_name="nom en anglais"),
                ),
                (
                    "cas_number",
                    models.CharField(
                        blank=True, max_length=10, verbose_name="numéro CAS"
                    ),
                ),
                (
                    "einec_number",
                    models.CharField(
                        blank=True, max_length=7, verbose_name="numéro EINECS"
                    ),
                ),
                ("source", models.TextField(blank=True)),
                ("must_specify_quantity", models.BooleanField(default=False)),
                (
                    "min_quantity",
                    models.FloatField(
                        blank=True,
                        null=True,
                        verbose_name="quantité minimale autorisée",
                    ),
                ),
                (
                    "max_quantity",
                    models.FloatField(
                        blank=True,
                        null=True,
                        verbose_name="quantité maximale autorisée",
                    ),
                ),
                (
                    "nutritional_reference",
                    models.FloatField(
                        blank=True,
                        null=True,
                        verbose_name="apport nutritionnel conseillé",
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical substance active",
                "verbose_name_plural": "historical substances actives",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalPopulation",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("creation_date", models.DateTimeField(blank=True, editable=False)),
                ("modification_date", models.DateTimeField(blank=True, editable=False)),
                ("name", models.TextField(verbose_name="nom")),
                (
                    "is_obsolete",
                    models.BooleanField(default=False, verbose_name="objet obsolète"),
                ),
                ("name_en", models.TextField(blank=True)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Population cible / à risque",
                "verbose_name_plural": "historical Population cible / à risques",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalPlantSynonym",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("creation_date", models.DateTimeField(blank=True, editable=False)),
                ("modification_date", models.DateTimeField(blank=True, editable=False)),
                ("name", models.TextField(verbose_name="nom")),
                (
                    "is_obsolete",
                    models.BooleanField(default=False, verbose_name="objet obsolète"),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "standard_name",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="data.plant",
                        verbose_name="nom de référence",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical synonyme de plante",
                "verbose_name_plural": "historical synonyme de plantes",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalPlantPart",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("creation_date", models.DateTimeField(blank=True, editable=False)),
                ("modification_date", models.DateTimeField(blank=True, editable=False)),
                ("name", models.TextField(verbose_name="nom")),
                (
                    "is_obsolete",
                    models.BooleanField(default=False, verbose_name="objet obsolète"),
                ),
                (
                    "name_en",
                    models.TextField(blank=True, verbose_name="nom en anglais"),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical partie de plante",
                "verbose_name_plural": "historical partie de plantes",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalPlantFamily",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("creation_date", models.DateTimeField(blank=True, editable=False)),
                ("modification_date", models.DateTimeField(blank=True, editable=False)),
                ("name", models.TextField(verbose_name="nom")),
                (
                    "is_obsolete",
                    models.BooleanField(default=False, verbose_name="objet obsolète"),
                ),
                (
                    "name_en",
                    models.TextField(blank=True, verbose_name="nom en anglais"),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical famille de plantes",
                "verbose_name_plural": "historical familles de plantes",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalPlant",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("creation_date", models.DateTimeField(blank=True, editable=False)),
                ("modification_date", models.DateTimeField(blank=True, editable=False)),
                ("name", models.TextField(verbose_name="nom")),
                (
                    "is_obsolete",
                    models.BooleanField(default=False, verbose_name="objet obsolète"),
                ),
                (
                    "public_comments",
                    models.TextField(blank=True, verbose_name="commentaires publics"),
                ),
                (
                    "private_comments",
                    models.TextField(blank=True, verbose_name="commentaires privés"),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "family",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="data.plantfamily",
                        verbose_name="famille de plante",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical plante",
                "verbose_name_plural": "historical plantes",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalMicroorganismSynonym",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("creation_date", models.DateTimeField(blank=True, editable=False)),
                ("modification_date", models.DateTimeField(blank=True, editable=False)),
                ("name", models.TextField(verbose_name="nom")),
                (
                    "is_obsolete",
                    models.BooleanField(default=False, verbose_name="objet obsolète"),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "standard_name",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="data.microorganism",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical synonyme de micro-organisme",
                "verbose_name_plural": "historical synonyme de micro-organismes",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalMicroorganism",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("creation_date", models.DateTimeField(blank=True, editable=False)),
                ("modification_date", models.DateTimeField(blank=True, editable=False)),
                ("name", models.TextField(verbose_name="nom")),
                (
                    "is_obsolete",
                    models.BooleanField(default=False, verbose_name="objet obsolète"),
                ),
                (
                    "public_comments",
                    models.TextField(blank=True, verbose_name="commentaires publics"),
                ),
                (
                    "private_comments",
                    models.TextField(blank=True, verbose_name="commentaires privés"),
                ),
                (
                    "name_en",
                    models.TextField(blank=True, verbose_name="nom en anglais"),
                ),
                ("genre", models.TextField(verbose_name="genre de micro-organisme")),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical micro-organisme",
                "verbose_name_plural": "historical micro-organismes",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalIngredientSynonym",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("creation_date", models.DateTimeField(blank=True, editable=False)),
                ("modification_date", models.DateTimeField(blank=True, editable=False)),
                ("name", models.TextField(verbose_name="nom")),
                (
                    "is_obsolete",
                    models.BooleanField(default=False, verbose_name="objet obsolète"),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "standard_name",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="data.ingredient",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical synonyme d'ingrédient",
                "verbose_name_plural": "historical synonyme d'ingrédients",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalIngredient",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("creation_date", models.DateTimeField(blank=True, editable=False)),
                ("modification_date", models.DateTimeField(blank=True, editable=False)),
                ("name", models.TextField(verbose_name="nom")),
                (
                    "is_obsolete",
                    models.BooleanField(default=False, verbose_name="objet obsolète"),
                ),
                (
                    "public_comments",
                    models.TextField(blank=True, verbose_name="commentaires publics"),
                ),
                (
                    "private_comments",
                    models.TextField(blank=True, verbose_name="commentaires privés"),
                ),
                (
                    "name_en",
                    models.TextField(blank=True, verbose_name="nom en anglais"),
                ),
                ("observation", models.TextField(blank=True)),
                ("description", models.TextField(blank=True)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical autre ingrédient",
                "verbose_name_plural": "historical autres ingrédients",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalCondition",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("creation_date", models.DateTimeField(blank=True, editable=False)),
                ("modification_date", models.DateTimeField(blank=True, editable=False)),
                ("name", models.TextField(verbose_name="nom")),
                (
                    "is_obsolete",
                    models.BooleanField(default=False, verbose_name="objet obsolète"),
                ),
                ("name_en", models.TextField(blank=True)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical condition de santé / facteurs de risque",
                "verbose_name_plural": "historical condition de santé / facteurs de risques",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
